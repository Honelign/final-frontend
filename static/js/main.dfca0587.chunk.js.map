{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/EditTodo.tsx","api/todos-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Todos.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","concat","authConfig","domain","clientId","callbackUrl","Auth","history","_classCallCheck","auth0","WebAuth","clientID","redirectUri","responseType","scope","this","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","_createClass","key","value","authorize","_this","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","_this2","checkSession","error_description","removeItem","return_to","origin","Callback","UploadState","_jsx","Dimmer","active","children","Loader","content","getTodos","_x","_getTodos","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","Axios","get","headers","sent","data","abrupt","items","stop","createTodo","_x2","_x3","_createTodo","_callee2","newTodo","_context2","post","JSON","stringify","item","patchTodo","_x4","_x5","_x6","_patchTodo","_callee3","todoId","updatedTodo","_context3","patch","deleteTodo","_x7","_x8","_deleteTodo","_callee4","_context4","delete","getUploadUrl","_x9","_x10","_getUploadUrl","_callee5","_context5","uploadUrl","uploadFile","_x11","_x12","_uploadFile","_callee6","file","_context6","put","EditTodo","_React$PureComponent","_inherits","_super","_createSuper","_len","length","args","Array","_key","call","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","_ref","preventDefault","setUploadState","FetchingPresignedUrl","props","auth","params","UploadingFile","t0","message","finish","_jsxs","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","React","LogIn","onLogin","onClick","size","color","NotFound","Todos","todos","newTodoName","loadingTodos","handleNameChange","onEditButtonClick","push","onTodoCreate","dueDate","calculateDueDate","name","_toConsumableArray","onTodoDelete","_ref2","filter","todo","onTodoCheck","_ref3","pos","done","update","_defineProperty","$set","_componentDidMount","Header","as","renderCreateTodoInput","renderTodos","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderTodosList","indeterminate","inline","padded","map","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","date","setDate","getDate","dateFormat","App","_Component","handleLogin","_assertThisInitialized","handleLogout","Segment","style","padding","vertical","container","stackable","Router","generateMenu","generateCurrentPage","Menu","Item","Link","to","position","logInLogOutButton","Switch","Route","path","exact","render","_objectSpread","component","Component","createHistory","ReactDOM","test","hash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfca0587.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// TODO: Once your application is deployed, copy an API id here so that the frontend could interact with it\nconst apiId = '7lv8xxxij0'\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`;//https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`\n\nexport const authConfig = {\n  // TODO: Create an Auth0 application and copy values from it into this map. For example:\n  // domain: 'dev-nd9990-p4.us.auth0.com',\n  domain: 'dev-02qpd7aayreejpos.us.auth0.com', // Auth0 domain\n  clientId: '34zwP3gKilZ2d2rXWKisjCya6L18hvsA',          // Auth0 client id\n  callbackUrl: 'http://localhost:3000/callback'\n}\n//export NODE_OPTIONS=--openssl-legacy-provider","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile } from '../api/todos-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile,\n}\n\ninterface EditTodoProps {\n  match: {\n    params: {\n      todoId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface EditTodoState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditTodo extends React.PureComponent<\n  EditTodoProps,\n  EditTodoState\n> {\n  state: EditTodoState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.todoId)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + (e as Error).message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from '../config'\nimport { Todo } from '../types/Todo';\nimport { CreateTodoRequest } from '../types/CreateTodoRequest';\nimport Axios from 'axios';\nimport { UpdateTodoRequest } from '../types/UpdateTodoRequest';\n\nexport async function getTodos(idToken: string): Promise<Todo[]> {\n  console.log('Fetching todos')\n\n  const response = await Axios.get(`${apiEndpoint}/todos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Todos:', response.data)\n  return response.data.items\n}\n\nexport async function createTodo(\n  idToken: string,\n  newTodo: CreateTodoRequest\n): Promise<Todo> {\n  const response = await Axios.post(`${apiEndpoint}/todos`,  JSON.stringify(newTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`,\n      'Accept':'application/json'\n   //   \"Access-Control-Allow-Origin\": '*'\n    }\n  })\n  console.log(\"is \"+idToken);\n  \n  return response.data.item\n}\n\nexport async function patchTodo(\n  idToken: string,\n  todoId: string,\n  updatedTodo: UpdateTodoRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/todos/${todoId}`, JSON.stringify(updatedTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function deleteTodo(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/todos/${todoId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  todoId: string\n): Promise<string> {\n  const response = await Axios.post(`${apiEndpoint}/todos/${todoId}/attachment`, '', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.uploadUrl\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await Axios.put(uploadUrl, file)\n}\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Button } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Please log in</h1>\n\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\n          Log in\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId !== todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${(e as Error).message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { EditTodo } from './components/EditTodo'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport { Todos } from './components/Todos'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Todos {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route\n          path=\"/todos/:todoId/edit\"\n          exact\n          render={props => {\n            return <EditTodo {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}